name: "scaffolding-ci"

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches: [develop, develop-0.1, develop-0.2]
  pull_request:
    branches: [develop, develop-0.1, develop-0.2]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  cargo_test:
    name: cargo_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.80.0
      - run: cargo test --no-fail-fast

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.80.0
      - run: cargo fmt --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.80.0
      - run: cargo clippy -- -D warnings

  testbuild:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template: [svelte, vue, lit, react, vanilla]
    steps:
      - uses: actions/checkout@v4

      - name: Maximize build space
        if: runner.os == 'Linux'
        uses: AdityaGarg8/remove-unwanted-software@v2
        with:
          remove-dotnet: "true"
          remove-android: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Install nix
        uses: cachix/install-nix-action@v30
        with:
          install_url: https://releases.nixos.org/nix/nix-2.24.4/install

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-scaffolding-cli
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build and test
        run: |
          cd $GITHUB_WORKSPACE
          nix develop .#ci --command ./run_test.sh -t ${{ matrix.template }}

  testbuild_by_scope:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scope:
          - hello_world
          - holo_integration
    steps:
      - uses: actions/checkout@v4

      - name: Maximize build space
        if: runner.os == 'Linux'
        uses: AdityaGarg8/remove-unwanted-software@v2
        with:
          remove-dotnet: "true"
          remove-android: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Install nix
        uses: cachix/install-nix-action@v30
        with:
          install_url: https://releases.nixos.org/nix/nix-2.24.4/install

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-scaffolding-cli
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build and test
        run: |
          cd $GITHUB_WORKSPACE
          nix develop .#ci --command ./run_test.sh -s ${{ matrix.scope }}
